---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ mig_namespace }}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backups.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: backups
    kind: Backup
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: schedules.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: schedules
    kind: Schedule
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: restores.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: restores
    kind: Restore
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: downloadrequests.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: downloadrequests
    kind: DownloadRequest
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: deletebackuprequests.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: deletebackuprequests
    kind: DeleteBackupRequest
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: podvolumebackups.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: podvolumebackups
    kind: PodVolumeBackup
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: podvolumerestores.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: podvolumerestores
    kind: PodVolumeRestore
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: resticrepositories.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: resticrepositories
    kind: ResticRepository
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backupstoragelocations.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: backupstoragelocations
    kind: BackupStorageLocation
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: volumesnapshotlocations.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: volumesnapshotlocations
    kind: VolumeSnapshotLocation
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serverstatusrequests.velero.io
  labels:
    component: velero
spec:
  group: velero.io
  version: v1
  scope: Namespaced
  names:
    plural: serverstatusrequests
    kind: ServerStatusRequest
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ mig_namespace }}
{% if dedicated_admin_mode == false %}
---
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedUnsafeSysctls:
- '*'
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be used
      only for cluster administration. Grant with caution.'
  creationTimestamp: null
  generation: 1
  name: velero-privileged
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:admin
- system:serviceaccount:{{ mig_namespace }}:velero
volumes:
- '*'
{% endif %}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: velero
  namespace: {{ mig_namespace }}
  labels:
    component: velero
{% if dedicated_admin_mode == false %}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: velero
  labels:
    component: velero
subjects:
  - kind: ServiceAccount
    namespace: {{ mig_namespace }}
    name: velero
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
{% endif %}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  namespace: {{ mig_namespace }}
  name: velero
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: velero
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8085"
        prometheus.io/path: "/metrics"
    spec:
      restartPolicy: Always
      serviceAccountName: velero
      containers:
        - name: velero
          image: {{ velero_image }}
          ports:
            - name: metrics
              containerPort: 8085
          command:
            - /velero
          args:
            - server
          volumeMounts:
            - name: {{ velero_aws_secret_name }}
              mountPath: /credentials
            - name: plugins
              mountPath: /plugins
            - name: scratch
              mountPath: /scratch
          env:
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: VELERO_SCRATCH_DIR
              value: /scratch
      volumes:
        - name: {{ velero_aws_secret_name }}
          secret:
            secretName: {{ velero_aws_secret_name }}
        - name: plugins
          emptyDir: {}
        - name: scratch
          emptyDir: {}
      initContainers:
        - image: {{ velero_plugin_image }}
          imagePullPolicy: Always
          name: velero-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /target
            name: plugins
{% if dedicated_admin_mode == false %}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: restic
  namespace: {{ mig_namespace }}
spec:
  selector:
    matchLabels:
      name: restic
  template:
    metadata:
      labels:
        name: restic
    spec:
      serviceAccountName: velero
      securityContext:
        runAsUser: 0
      volumes:
        - name: {{ velero_aws_secret_name }}
          secret:
            secretName: {{ velero_aws_secret_name }}
        - name: host-pods
          hostPath:
            path: {{ restic_pv_host_path }}
        - name: scratch
          emptyDir: {}
      containers:
        - name: velero
          securityContext:
            privileged: true
          image: {{ velero_image }}
          command:
            - /velero
          args:
            - restic
            - server
          volumeMounts:
            - name: {{ velero_aws_secret_name }}
              mountPath: /credentials
            - name: host-pods
              mountPath: /host_pods
              mountPropagation: HostToContainer
            - name: scratch
              mountPath: /scratch
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /credentials/cloud
            - name: VELERO_SCRATCH_DIR
              value: /scratch
{% endif %}
{% if dedicated_admin_mode == true %}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: velero-dedicated
rules:
- apiGroups:
  - velero.io
  resources:
  - backups
  - backupstoragelocations
  - deletebackuprequests
  - downloadrequests
  - podvolumebackups
  - podvolumerestores
  - resticrepositories
  - restores
  - schedules
  - serverstatusrequests
  - volumesnapshotlocations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ mig_namespace }}
  name: velero-dedicated-admins-project-0
subjects:
- kind: ServiceAccount
  name: velero
roleRef:
  kind: ClusterRole
  name: dedicated-admins-project
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ mig_namespace }}
  name: velero-dedicated-admins-project-1
subjects:
- kind: ServiceAccount
  name: velero
roleRef:
  kind: ClusterRole
  name: admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ mig_namespace }}
  name: velero-dedicated-admins-project-2
subjects:
- kind: ServiceAccount
  name: velero
roleRef:
  kind: ClusterRole
  name: velero-dedicated
{% endif %}
